module.exports = (function (n) { const t = {}; function e(r) { if (t[r]) return t[r].exports; const o = t[r] = { i: r, l: !1, exports: {} }; return n[r].call(o.exports, o, o.exports, e), o.l = !0, o.exports; } return e.m = n, e.c = t, e.d = function (n, t, r) { e.o(n, t) || Object.defineProperty(n, t, { enumerable: !0, get: r }); }, e.r = function (n) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(n, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(n, '__esModule', { value: !0 }); }, e.t = function (n, t) { if (1 & t && (n = e(n)), 8 & t) return n; if (4 & t && typeof n === 'object' && n && n.__esModule) return n; const r = Object.create(null); if (e.r(r), Object.defineProperty(r, 'default', { enumerable: !0, value: n }), 2 & t && typeof n !== 'string') for (const o in n)e.d(r, o, ((t) => n[t]).bind(null, o)); return r; }, e.n = function (n) { const t = n && n.__esModule ? function () { return n.default; } : function () { return n; }; return e.d(t, 'a', t), t; }, e.o = function (n, t) { return Object.prototype.hasOwnProperty.call(n, t); }, e.p = '', e(e.s = 0); }([function (n, t, e) {
  'use strict';

  e.r(t); const r = function (n, t, e) { const r = n.clientWidth; return e.getTotalLength() * (r / t); }; const o = function (n, t) { const e = n.replace('#', ''); let r = 0; let o = 0; let i = 0; return e.length === 3 && (r = parseInt(''.concat(e.substring(0, 1)).concat(e.substring(0, 1)), 16), o = parseInt(''.concat(e.substring(1, 2)).concat(e.substring(1, 2)), 16), i = parseInt(''.concat(e.substring(2, 3)).concat(e.substring(2, 3)), 16)), e.length === 6 && (r = parseInt(e.substring(0, 2), 16), o = parseInt(e.substring(2, 4), 16), i = parseInt(e.substring(4, 6), 16)), 'rgba('.concat(r, ', ').concat(o, ', ').concat(i, ', ').concat(t || 1, ')'); }; const i = function (n, t) { t && t.length > 0 && t.forEach(((t) => { Object.defineProperty(n, t, { writable: !0, set property(n) { this[t] = n; } }); })); }; const u = function () { window && (window.requestAnimationFrame = function (n) { n(performance.now()); }); }; const c = function () { let n; ((n = window) === null || void 0 === n ? void 0 : n.document) && (window.document.mouseTo = function (n, t) { if (n <= window.innerWidth && t <= window.innerHeight) { const e = new window.Event('mousemove'); e.clientX = n, e.clientY = t, window.document.dispatchEvent(e); } }, window.document.mouseEnter = function () { return window.document.dispatchEvent(new window.Event('mouseenter')); }, window.document.mouseLeave = function () { return window.document.dispatchEvent(new window.Event('mouseleave')); }); }; const s = function () { window && (window.resizeTo = function (n, t) { Object.assign(this, { innerWidth: n, innerHeight: t, outerWidth: n, outerHeight: t }).dispatchEvent(new this.Event('resize')); }); }; function d(n, t) { return (function (n) { if (Array.isArray(n)) return n; }(n)) || (function (n, t) { if (!(Symbol.iterator in Object(n) || Object.prototype.toString.call(n) === '[object Arguments]')) return; const e = []; let r = !0; let o = !1; let i = void 0; try { for (var u, c = n[Symbol.iterator](); !(r = (u = c.next()).done) && (e.push(u.value), !t || e.length !== t); r = !0); } catch (n) { o = !0, i = n; } finally { try { r || c.return == null || c.return(); } finally { if (o) throw i; } } return e; }(n, t)) || (function () { throw new TypeError('Invalid attempt to destructure non-iterable instance'); }()); } const a = function (n) { let t; let e; const r = d(n.scrollArea, 2); const o = r[0]; const u = r[1]; ((t = window) === null || void 0 === t ? void 0 : (e = t.document) === null || void 0 === e ? void 0 : e.body) && (i(window.document.body, ['scrollWidth', 'scrollHeight']), window.document.body.scrollWidth = o, window.document.body.scrollHeight = u, window.scrollTo = function (n, t) { Object.assign(this, { pageXOffset: n, pageYOffset: t }).dispatchEvent(new this.Event('scroll')); }); }; const l = function (n, t) { const e = n.length > t; if (!e) return n; const r = e ? n.substring(0, t).trim() : n; const o = r.lastIndexOf('.') === r.length - 1; return ''.concat(r).concat(o ? '..' : '...'); }; e.d(t, 'getSVGPathLength', (() => r)), e.d(t, 'hexToRGBA', (() => o)), e.d(t, 'mockPropertySetters', (() => i)), e.d(t, 'mockRequestAnimationFrame', (() => u)), e.d(t, 'mockWindowMouseEvents', (() => c)), e.d(t, 'mockWindowResizeEvents', (() => s)), e.d(t, 'mockWindowScrollEvents', (() => a)), e.d(t, 'trimStringWithEllipsis', (() => l));
}]));
